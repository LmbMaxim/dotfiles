input {
    keyboard {
        xkb {
            layout "us,ru"
            options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
    }

    mouse {
        // off
        // natural-scroll
        accel-speed -0.5
        accel-profile "flat"
        // scroll-method "no-scroll"
	middle-emulation
    }

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="0%"
}

environment {
        DISPLAY ":0"
	EDITOR "nvim"
        ELECTRON_OZONE_PLATFORM_HINT "auto"
        QT_QPA_PLATFORM "wayland"
        QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
        XDG_SESSION_TYPE "wayland"
        XDG_CURRENT_DESKTOP "niri"
    }

output "DP-1" {
    mode "2560x1440@99.946"
    transform "normal"
    // scale 1.5
}
output "HDMI-A-1" {
    mode "1920x1080@100.000"
    position x=0 y=0
}
gestures {
    hot-corners {
        off
    }
}
overview {
    zoom 0.5
    workspace-shadow {
        off
    }
}

layer-rule {
//    match namespace="^wallpaper$"
    place-within-backdrop true
}


hotkey-overlay {
    skip-at-startup
}

layout {
    background-color "transparent"
    gaps 10
    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    //center-focused-column "always"


    preset-column-widths {
        proportion 0.5
    }

    default-column-width { proportion 0.99998; }

}

// Note that running niri as a session supports xdg-desktop-autostart,
spawn-at-startup "xwayland-satellite"
spawn-at-startup "swww-daemon"
spawn-at-startup "mako"
spawn-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
spawn-at-startup "/bin/waybar"
spawn-at-startup "Telegram"
spawn-at-startup "/usr/bin/corectrl"
spawn-at-startup "/home/skate/.config/niri/toggle_overview.sh"
spawn-at-startup "/home/skate/Scripts/mpd-listener.sh"

spawn-sh-at-startup "bash -c 'sudo wg-quick up desktop && notify-send \"WireGuard\" \"Connection activated\"'"

spawn-sh-at-startup "bash -c '/usr/local/bin/set-gpu-freq.sh'"


screenshot-path "~/Images/screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"
prefer-no-csd

animations {
    slowdown 0.8
}


workspace "BrowserMain" {
    open-on-output "DP-1"
}


window-rule {
    match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
    default-floating-position x=10 y=10 relative-to="bottom-right"
}
window-rule {
  match app-id="org.gnome.Nautilus"
  match app-id="org.telegram.desktop"
  match app-id="foot"
  match app-id="org.qbittorrent.qBittorrent"

  default-column-width { proportion 0.5; }
}
window-rule {
  match app-id="foot"
  opacity 0.95
  focus-ring {
    on
    width 1
    active-color "#7fc8ff"
    }
}   


// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    block-out-from "screen-capture"
}

window-rule {
     focus-ring {
       on
       width 1
       active-color "#7fc8ff"
       }
}


// wev
binds {
//     Note: the entire command goes as a single argument in the end.
//     Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

     Prior { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
     Next { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }


//     There are commands to move just a single window:
//     Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }

//     And you can also move a whole workspace to another monitor:
//     Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    Mod+BackSpace { spawn "/home/skate/Scripts/play-v2.sh"; }
    Mod+Escape { spawn "wlr-which-key"; }
    Mod+T hotkey-overlay-title="Open a Terminal: alacritty" { spawn "foot"; }
    MouseForward hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }
    Mod+Return hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }

    Mod+Tab repeat=false { toggle-overview; }
    MouseBack { toggle-overview; }
    Mod+Q { close-window; }
    Mod+M     { focus-monitor-next; }
    Mod+Shift+M     { move-column-to-monitor-next; }

    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+H     { focus-column-left; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    //Scrolling
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }

    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+F { maximize-column; }
    Mod+R { switch-preset-window-width; }
    Mod+Shift+F { fullscreen-window; }
    Mod+V  { toggle-window-floating; }
    Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+P { screenshot-screen; }
    Alt+Print { screenshot-window; }

    Ctrl+Alt+Delete { quit; }
    Mod+Shift+P { power-off-monitors; }
}
